# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python tests

on:
  [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install -e .[chem,bio,transformers,splits]
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        # run doctests as individual packages
        pytest duvidnn --doctest-modules
        # run other tests
        pytest test/test_evaluation.py
    - name: Test CLI bilinear model with fingerprints
      run: |
        bash test/scripts/train-hash-fp.sh
    - name: Test CLI hashing/bilinear model
      run: |
        bash test/scripts/train-hash.sh
    - name: Test CLI species featurizer
      run: |
        bash test/scripts/train-species.sh
    - name: Test CLI train/test
      run: |
        bash test/scripts/train.sh
    - name: Test CLI splitting/percentiles
      run: |
        bash test/scripts/split.sh
